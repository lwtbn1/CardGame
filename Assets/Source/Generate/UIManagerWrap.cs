//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("PushPanel", PushPanel);
		L.RegFunction("HidePanel", HidePanel);
		L.RegFunction("PushPopups", PushPopups);
		L.RegFunction("AddWidget", AddWidget);
		L.RegFunction("ShowTextTips", ShowTextTips);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PushPanel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UIManager obj = (UIManager)ToLua.CheckObject(L, 1, typeof(UIManager));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
			obj.PushPanel(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HidePanel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIManager obj = (UIManager)ToLua.CheckObject(L, 1, typeof(UIManager));
			obj.HidePanel();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PushPopups(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIManager obj = (UIManager)ToLua.CheckObject(L, 1, typeof(UIManager));
			string arg0 = ToLua.CheckString(L, 2);
			LuaTable arg1 = ToLua.CheckLuaTable(L, 3);
			obj.PushPopups(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddWidget(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIManager obj = (UIManager)ToLua.CheckObject(L, 1, typeof(UIManager));
			string arg0 = ToLua.CheckString(L, 2);
			LuaTable arg1 = ToLua.CheckLuaTable(L, 3);
			obj.AddWidget(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowTextTips(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIManager obj = (UIManager)ToLua.CheckObject(L, 1, typeof(UIManager));
			string arg0 = ToLua.CheckString(L, 2);
			obj.ShowTextTips(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

